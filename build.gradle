plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.nikhil'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.30.16')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:dynamodb-enhanced'

//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // exclude tomcat dependency as we will be deploying on AWS Lambda
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot2:1.9.4'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'commons-io:commons-io:2.18.0'
//    implementation 'org.apache.tika:tika-core:2.9.2'

//    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok'

//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

//tasks.named('test') {
//    useJUnitPlatform()
//}
